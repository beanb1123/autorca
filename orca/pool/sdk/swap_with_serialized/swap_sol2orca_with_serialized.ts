import { Keypair, Connection, Transaction } from "@solana/web3.js";
import { getOrca, OrcaPoolConfig, Network } from '@orca-so/sdk';
import Decimal from 'decimal.js';

const RPC_ENDPOINT_URL = "https://api.devnet.solana.com";
const commitment = 'confirmed';
const connection = new Connection(RPC_ENDPOINT_URL, commitment);

const id_json_path = require('os').homedir() + "/.config/solana/id.json";
const secret = Uint8Array.from(JSON.parse(require("fs").readFileSync(id_json_path)));
const wallet = Keypair.fromSecretKey(secret as Uint8Array);

async function main() {
    const orca = getOrca(connection, Network.DEVNET);
    const orca_sol_pool = orca.getPool(OrcaPoolConfig.ORCA_SOL);

    const sol_token = orca_sol_pool.getTokenB();
    const sol_amount = new Decimal(0.0005);
    const quote = await orca_sol_pool.getQuote(sol_token, sol_amount);
    const usdc_amount = quote.getMinOutputAmount();
    console.log(`Swap ${sol_amount.toString()} SOL for at least ${usdc_amount.toNumber()} ORCA`);

  // SERVER SIDE

    // construct tx with publicKey of wallet
    const wallet_pubkey = wallet.publicKey;
    const payload = await orca_sol_pool.swap(wallet_pubkey, sol_token, sol_amount, usdc_amount);

    const transaction = payload.transaction;
    console.log("transaction", transaction);
    // sign by temporary keys generated by SDK
    transaction.partialSign(...payload.signers);
    console.log("partialSigned", transaction);

    // ** requireAllSignatures: false **
    const serialized = transaction.serialize({requireAllSignatures: false});
    console.log("serialized", serialized);

  // CLIENT SIDE

    // reconstruct transaction from serialized data
    const deserialized = Transaction.from(serialized);
    console.log("deserialized", deserialized);

    // sign by (secretKye of) wallet
    deserialized.partialSign(wallet);
    const signature = await connection.sendRawTransaction(deserialized.serialize());

    await connection.confirmTransaction(signature);
    console.log(`Swapped: ${signature}`);
}

main();

/*

i$ ts-node src/swap_sol2orca_with_serialized.ts 
Swap 0.0005 SOL for at least 0.00007 ORCA
transaction Transaction {
  signatures: [],
  feePayer: PublicKey {
    _bn: <BN: c8e98784f83304f461480d786b47bda045914d221b4ac77740297afb6715335>
  },
  instructions: [
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 00 00 00 00 10 bf 26 00 00 00 00 00 a5 00 00 00 00 00 00 00 06 dd f6 e1 d7 65 a1 93 d9 cb e1 46 ce eb 79 ac 1c b4 85 ed 5f 5b 37 91 3a 8c f5 85 7e ff ... 2 more bytes>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 01>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 04 20 a1 07 00 00 00 00 00>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 01 20 a1 07 00 00 00 00 00 46 00 00 00 00 00 00 00>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 05>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 09>
    }
  ],
  recentBlockhash: 'GY41mqHUddJnHe9gYAxmB32TLexiUCWycVpf474p7bUL',
  lastValidBlockHeight: undefined,
  nonceInfo: undefined,
  _message: undefined,
  _json: undefined
}
partialSigned Transaction {
  signatures: [
    { signature: null, publicKey: [PublicKey] },
    {
      signature: <Buffer f8 11 d8 65 6a 62 8a ce c8 f0 bb 1d b9 9f 6d e2 af d7 ff a4 8e 03 c6 aa 6b 52 8e d3 7a 08 22 69 30 90 71 fa 00 70 0f 63 e3 66 2a 93 43 04 51 40 e6 96 ... 14 more bytes>,
      publicKey: [PublicKey]
    },
    {
      signature: <Buffer 09 55 9e 21 a2 c5 e0 da 45 e3 fc 05 80 d9 51 3a bc 74 4d 86 06 3f 6c d0 f6 00 d0 2e 58 59 48 05 4c 50 83 67 78 71 8a 08 13 75 29 10 c3 75 f9 45 73 c4 ... 14 more bytes>,
      publicKey: [PublicKey]
    }
  ],
  feePayer: PublicKey {
    _bn: <BN: c8e98784f83304f461480d786b47bda045914d221b4ac77740297afb6715335>
  },
  instructions: [
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 00 00 00 00 10 bf 26 00 00 00 00 00 a5 00 00 00 00 00 00 00 06 dd f6 e1 d7 65 a1 93 d9 cb e1 46 ce eb 79 ac 1c b4 85 ed 5f 5b 37 91 3a 8c f5 85 7e ff ... 2 more bytes>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 01>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 04 20 a1 07 00 00 00 00 00>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 01 20 a1 07 00 00 00 00 00 46 00 00 00 00 00 00 00>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 05>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 09>
    }
  ],
  recentBlockhash: 'GY41mqHUddJnHe9gYAxmB32TLexiUCWycVpf474p7bUL',
  lastValidBlockHeight: undefined,
  nonceInfo: undefined,
  _message: undefined,
  _json: undefined
}
serialized <Buffer 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ... 783 more bytes>
deserialized Transaction {
  signatures: [
    { signature: null, publicKey: [PublicKey] },
    {
      signature: <Buffer f8 11 d8 65 6a 62 8a ce c8 f0 bb 1d b9 9f 6d e2 af d7 ff a4 8e 03 c6 aa 6b 52 8e d3 7a 08 22 69 30 90 71 fa 00 70 0f 63 e3 66 2a 93 43 04 51 40 e6 96 ... 14 more bytes>,
      publicKey: [PublicKey]
    },
    {
      signature: <Buffer 09 55 9e 21 a2 c5 e0 da 45 e3 fc 05 80 d9 51 3a bc 74 4d 86 06 3f 6c d0 f6 00 d0 2e 58 59 48 05 4c 50 83 67 78 71 8a 08 13 75 29 10 c3 75 f9 45 73 c4 ... 14 more bytes>,
      publicKey: [PublicKey]
    }
  ],
  feePayer: PublicKey {
    _bn: <BN: c8e98784f83304f461480d786b47bda045914d221b4ac77740297afb6715335>
  },
  instructions: [
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 00 00 00 00 10 bf 26 00 00 00 00 00 a5 00 00 00 00 00 00 00 06 dd f6 e1 d7 65 a1 93 d9 cb e1 46 ce eb 79 ac 1c b4 85 ed 5f 5b 37 91 3a 8c f5 85 7e ff ... 2 more bytes>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 01>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 04 20 a1 07 00 00 00 00 00>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 01 20 a1 07 00 00 00 00 00 46 00 00 00 00 00 00 00>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 05>
    },
    TransactionInstruction {
      keys: [Array],
      programId: [PublicKey],
      data: <Buffer 09>
    }
  ],
  recentBlockhash: 'GY41mqHUddJnHe9gYAxmB32TLexiUCWycVpf474p7bUL',
  lastValidBlockHeight: undefined,
  nonceInfo: undefined,
  _message: Message {
    header: {
      numRequiredSignatures: 3,
      numReadonlySignedAccounts: 1,
      numReadonlyUnsignedAccounts: 7
    },
    accountKeys: [
      [PublicKey], [PublicKey],
      [PublicKey], [PublicKey],
      [PublicKey], [PublicKey],
      [PublicKey], [PublicKey],
      [PublicKey], [PublicKey],
      [PublicKey], [PublicKey],
      [PublicKey], [PublicKey],
      [PublicKey]
    ],
    recentBlockhash: 'GY41mqHUddJnHe9gYAxmB32TLexiUCWycVpf474p7bUL',
    instructions: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
    indexToProgramIds: Map(3) { 8 => [PublicKey], 14 => [PublicKey], 10 => [PublicKey] }
  },
  _json: {
    recentBlockhash: 'GY41mqHUddJnHe9gYAxmB32TLexiUCWycVpf474p7bUL',
    feePayer: 'r21Gamwd9DtyjHeGywsneoQYR39C1VDwrw7tWxHAwh6',
    nonceInfo: null,
    instructions: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
    signers: [
      'r21Gamwd9DtyjHeGywsneoQYR39C1VDwrw7tWxHAwh6',
      '459v92shVmtXxUkJ6SuYVH7kod2Gdyn9mSige6ir4bLv',
      '3654K5mP7RySx8y5CNU57SEAkQTZCRq17gA2XtM5uykL'
    ]
  }
}
Swapped: 3H4JWmpsxkU1JvSFZTuWtVtnBFjSdbzPno34Zo9TfUVeXrWAd1PGst3pML2RtY3wUwPyEPmz5WrRoEKyxvTpQMHB

*/